// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MovableInk
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Combine
import CoreData
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import os
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers public class MIClient : ObjectiveC.NSObject {
  @objc public static var loggingEnabled: Swift.Bool
  @objc public static var storedDeeplink: Swift.String? {
    @objc get
  }
  public static var storedDeeplinkSubject: Combine.CurrentValueSubject<Swift.String?, Swift.Never>
  @objc public static func start(launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]? = nil, deeplinkHandler: @escaping (Swift.String) -> Swift.Void)
  @objc deinit
}
extension MovableInk.MIClient {
  @objc public static func registerDeeplinkDomains(_ domains: [Swift.String])
  @objc public static func canHandleURL(_ url: Foundation.URL) -> Swift.Bool
  @objc @discardableResult
  public static func handleUniversalLink(with options: UIKit.UIScene.ConnectionOptions) -> Swift.Bool
  @objc @discardableResult
  public static func handleUniversalLink(from userActivity: Foundation.NSUserActivity) -> Swift.Bool
  @objc @discardableResult
  public static func handleUniversalLink(url: Foundation.URL) -> Swift.Bool
}
extension MovableInk.MIClient {
  @objc dynamic public func miU() -> Swift.String?
  @objc dynamic public func setMIU(_ value: Swift.String)
}
