{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Getting started for apps that are built with React Native. React Native version 0.70 was used."}]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The MovableInk SDK only supports the iOS Platform."}]}],"type":"aside","name":"Important"},{"anchor":"Integration","level":2,"type":"heading","text":"Integration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Open Xcode and open your projects xcworkspace. File > Open > project\/ios\/*.xcworkspace."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Download the MovableInk SDK and add it to your project by dragging the "},{"type":"codeVoice","code":"MovableInk.xcframework"},{"type":"text","text":" file into the Frameworks, Libraries, and Embedded Content section in the Project Settings:"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"project_settings_add_framework.gif"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In your "},{"type":"codeVoice","code":"Info.plist"},{"type":"text","text":", add the "},{"type":"codeVoice","code":"movable_ink_universal_link_domains"},{"type":"text","text":" key as an array containing all the domains that you’d like the MovableInk SDK to handle. Note: These should only be domains that are shown in your Creative Tags, such as "},{"type":"codeVoice","code":"mi.example.com"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"xml","code":["<key>movable_ink_universal_link_domains<\/key>","<array>","  <string>mi.example.com<\/string>","<\/array>"]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"info_plist_example.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also edit the "},{"type":"codeVoice","code":"Info.plist"},{"type":"text","text":" in the Project Settings."},{"type":"text","text":" "},{"type":"text","text":"Navigate to the Project Settings, then to the Info tab."},{"type":"text","text":" "},{"type":"text","text":"Here, you can add the "},{"type":"codeVoice","code":"movable_ink_universal_link_domains"},{"type":"text","text":" key as an array:"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"project_settings_update_info.gif"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Under the Signing & Capabilities tab, add the Associated Domains Capability, then add the applinks that you can support. These should include the same domains as the ones in the "},{"type":"codeVoice","code":"movable_ink_universal_link_domains"},{"type":"text","text":" in the step before."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"project_settings_update_capabilities.gif"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To access the clickthrough url in your React Native app, we’ll use a "},{"type":"codeVoice","code":"RCTEventEmitter"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new swift file, name it "},{"type":"codeVoice","code":"MovableInkEmitter"},{"type":"text","text":" and paste in code below. This will allow us to send the clickthrough think to the React Native app. If you’ve never added Swift code to your project before, you’ll be asked to Create Bridging Header, create it."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"project_settings_add_bridging_header.gif"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can read more about using Swift in an ObjC codebase at "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/importing-swift-into-objective-c"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ MovableInkEmitter.swift","import UIKit","","@objc(MovableInkEmitter)","class MovableInkEmitter: RCTEventEmitter {","  private static var shared: MovableInkEmitter?","  static var initialLink: String?","  ","  override init() {","    super.init()","    ","    MovableInkEmitter.shared = self","  }","  ","  override func supportedEvents() -> [String]! {","    [\"MIDeeplinkHandler\"]","  }","  ","  @objc static func setInitialDeeplink(_ url: URL?) {","    if initialLink == nil {","      initialLink = url?.absoluteString","    }","  }","","  @objc static func sendClickthrough(url: String) {","    shared?.sendEvent(withName: \"MIDeeplinkHandler\", body: [\"clickthroughLink\": url])","  }","  ","  override class func requiresMainQueueSetup() -> Bool {","    true","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the bridging header that was created and add the following: This will expose the RCTEventEmitter to Swift."}]},{"type":"codeListing","syntax":"objc","code":["#import <React\/RCTEventEmitter.h>","#import <React\/RCTBridgeModule.h>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You’ll also need to create a new Objective-C File named "},{"type":"codeVoice","code":"MovableInkEmitter.m"},{"type":"text","text":" so that React Native registers MovableInkEmitter as a NativeModule."}]},{"type":"codeListing","syntax":"objc","code":["#import <React\/RCTEventEmitter.h>","#import <React\/RCTBridgeModule.h>","","@interface RCT_EXTERN_MODULE(MovableInkEmitter, RCTEventEmitter)","","@end"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In your "},{"type":"codeVoice","code":"AppDelegate"},{"type":"text","text":", import MovableInk and call the "},{"type":"codeVoice","code":"start"},{"type":"text","text":" method when your app has finished launching as well as overriding the other methods shown below. You’ll also need to import the Swift Header that was generated at the top of the file so that Xcode can find the "},{"type":"codeVoice","code":"MovableInkEmitter"},{"type":"text","text":". If you’re not sure what the header name is that was generated, you can check the Build Settings and search for SWIFT_OBJC_INTERFACE_HEADER_NAME."}]},{"type":"codeListing","syntax":"objc","code":["\/\/ AppDelegate.m","#import <MovableInk\/MovableInk-Swift.h> \/\/ MovableInk SDK","#import \"MyProject-Swift.h\" \/\/ Your Generated Swift Header","","...","","- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions","{","  ...","  ","  [MIClient startWithLaunchOptions:launchOptions deeplinkHandler:^(NSString * _Nonnull url) {","    [MovableInkEmitter sendClickthroughLink:url];","  }];","","  ...","}","","- (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {","","  \/\/ Store the initial link","  [MovableInkEmitter setInitialDeeplink:url];","","  if (![MIClient handleUniversalLinkWithUrl:url]) {","    \/\/ This code block will run if the MIClient is unable to handle the url (not a Creative Tag).","    \/\/ In that case, you need to handle it. If you wanted, you could have the emitter send it to your React Native app","    \/\/ and handle it there.","    \/\/","    \/\/ [MovableInkEmitter sendClickthroughLink:url.absoluteString];","  }","  ","  return true;","}","","- (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity restorationHandler:(void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler {","","  \/\/ Store the initial link","  if (userActivity.activityType == NSUserActivityTypeBrowsingWeb) {","    [MovableInkEmitter setInitialDeeplink:userActivity.webpageURL];","  }","","  if (![MIClient handleUniversalLinkFrom:userActivity]) {","    \/\/ This code block will run if the MIClient is unable to handle the url (not a Creative Tag).","    \/\/ In that case, you need to handle it. If you wanted, you could have the emitter send it to your React Native app","    \/\/ and handle it there.","  }","","  return true;","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Back in the React Native world, open your "},{"type":"codeVoice","code":"App.js"},{"type":"text","text":" and update your app to subscribe to the emitter we created above."}]},{"type":"codeListing","syntax":"js","code":["import React, {Component} from 'react';","import {NativeModules, NativeEventEmitter} from 'react-native';","","class App extends Component {","  constructor(props) {","    super(props);","","    this.state = {","      url: \"\"","    };","","    this.miEmitter = new NativeEventEmitter(NativeModules.MovableInkEmitter);","","    this.miEmitterSubscription = this.miEmitter.addListener(","      \"MIDeeplinkHandler\",","      (result) => {","        console.log(result)","        this.setState({","          url: result.clickthroughLink","        });","      }","    );","","    backgroundStyle = {","      backgroundColor: Colors.darker,","    };","  }","","  componentWillUnmount() {","    this.miEmitterSubscription.remove();","  }","","  render() {","    return (","      ...","    );","  }","}"]},{"anchor":"Initial-Links","level":2,"type":"heading","text":"Initial Links"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your app is opened from a link and React Native hasn’t bridged your app to the Native Modules yet by the time MovableInk has handled it, your app may miss the clickthrough url. To resolve this, you can store the incoming link, then ask the SDK to handle it once the React Native bridge is created."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new file, select the Cocoa Touch Class template. Name the file MovableInkBridge. It should subclass NSObject."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This should create MovableInkBridge.h and MovableInkBridge.m."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Update MovableInkBridge.h to the following:"}]},{"type":"codeListing","syntax":"objc","code":["\/\/ MovableInkBridge.h","","#import <Foundation\/Foundation.h>","#import <React\/RCTBridgeModule.h>","","NS_ASSUME_NONNULL_BEGIN","","@interface MovableInkBridge : NSObject <RCTBridgeModule>","","@end","","NS_ASSUME_NONNULL_END"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"and MovableInkBridge.m:"}]},{"type":"codeListing","syntax":"objc","code":["\/\/ MovableInkBridge.m","","#import \"MovableInkBridge.h\"","#import \"MyProject-Swift.h\" \/\/ Update this to your generated Swift Header","","@implementation MovableInkBridge","","RCT_EXPORT_MODULE(MovableInkBridge);","","RCT_EXPORT_METHOD(resolveInitialDeeplink) {","  NSString *link = [MovableInkEmitter initialDeeplink];","  NSURL *url = [[NSURL alloc] initWithString:link];","  ","  [MIClient handleUniversalLinkWithUrl:url];","}","","RCT_EXPORT_METHOD(initialDeeplink:(RCTPromiseResolveBlock)resolve","                  rejecter:(RCTPromiseRejectBlock)reject) {","    NSString *deeplink = [MovableInkEmitter initialDeeplink];","    resolve(deeplink);","}","","RCT_EXPORT_METHOD(handleUniversalLink: (NSString *)link) {","  NSURL *url = [[NSURL alloc] initWithString:link];","  ","  [MIClient handleUniversalLinkWithUrl:url];","}","","@end"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In your App.js, you can now use those methods:"}]},{"type":"codeListing","syntax":"js","code":["\/\/ You can use this to check if there is a url that opened the app","NativeModules.MovableInkBridge","  .initialDeeplink","  .then(result => console.log(result));","","\/\/ This will attempt to resolve the initial deeplink if there is one","\/\/","\/\/ You should ensure that this only gets called once","NativeModules.MovableInkBridge.resolveInitialDeeplink()"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/movableink\/reactnative"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/ReactNative","interfaceLanguage":"swift"},"kind":"article","metadata":{"roleHeading":"Article","title":"React Native","role":"article","modules":[{"name":"MovableInk"}]},"hierarchy":{"paths":[["doc:\/\/com.movableink.sdk\/documentation\/MovableInk"]]},"seeAlsoSections":[{"title":"Getting Started","identifiers":["doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/Swift_UIKit_Scenes","doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/Swift_UIKit_No_Scenes","doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/SwiftUI","doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/ObjC","doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/Flutter"],"generated":true}],"references":{"doc://com.movableink.sdk/documentation/MovableInk/Flutter":{"role":"article","title":"Flutter","abstract":[],"identifier":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/Flutter","kind":"article","type":"topic","url":"\/documentation\/movableink\/flutter"},"project_settings_update_capabilities.gif":{"alt":"Project Settings Capabilities gif","type":"image","identifier":"project_settings_update_capabilities.gif","variants":[{"url":"\/images\/project_settings_update_capabilities.gif","traits":["1x","light"]}]},"doc://com.movableink.sdk/documentation/MovableInk/SwiftUI":{"role":"article","title":"SwiftUI App","abstract":[],"identifier":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/SwiftUI","kind":"article","type":"topic","url":"\/documentation\/movableink\/swiftui"},"project_settings_add_framework.gif":{"alt":"Project Settings Add Framework","type":"image","identifier":"project_settings_add_framework.gif","variants":[{"url":"\/images\/project_settings_add_framework.gif","traits":["1x","light"]}]},"project_settings_add_bridging_header.gif":{"alt":"Project Settings Add Bridging Header gif","type":"image","identifier":"project_settings_add_bridging_header.gif","variants":[{"url":"\/images\/project_settings_add_bridging_header.gif","traits":["1x","light"]}]},"https://developer.apple.com/documentation/swift/importing-swift-into-objective-c":{"title":"Apple’s developer site ","titleInlineContent":[{"type":"text","text":"Apple’s developer site "}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/importing-swift-into-objective-c","url":"https:\/\/developer.apple.com\/documentation\/swift\/importing-swift-into-objective-c"},"info_plist_example.png":{"alt":"Info plist example","type":"image","identifier":"info_plist_example.png","variants":[{"url":"\/images\/info_plist_example.png","traits":["1x","light"]}]},"doc://com.movableink.sdk/documentation/MovableInk":{"role":"collection","title":"MovableInk","abstract":[{"type":"text","text":"The MovableInk SDK provides the tools to allow your app to be deeplinked into from a Creative Tag."}],"identifier":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk","kind":"symbol","type":"topic","url":"\/documentation\/movableink"},"doc://com.movableink.sdk/documentation/MovableInk/Swift_UIKit_Scenes":{"role":"article","title":"Swift\/UIKit - Using Scenes","abstract":[],"identifier":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/Swift_UIKit_Scenes","kind":"article","type":"topic","url":"\/documentation\/movableink\/swift_uikit_scenes"},"doc://com.movableink.sdk/documentation/MovableInk/Swift_UIKit_No_Scenes":{"role":"article","title":"Swift\/UIKit - Without Scenes","abstract":[],"identifier":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/Swift_UIKit_No_Scenes","kind":"article","type":"topic","url":"\/documentation\/movableink\/swift_uikit_no_scenes"},"project_settings_update_info.gif":{"alt":"Project Settings gif","type":"image","identifier":"project_settings_update_info.gif","variants":[{"url":"\/images\/project_settings_update_info.gif","traits":["1x","light"]}]},"doc://com.movableink.sdk/documentation/MovableInk/ObjC":{"role":"article","title":"Objective-C","abstract":[],"identifier":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/ObjC","kind":"article","type":"topic","url":"\/documentation\/movableink\/objc"}}}