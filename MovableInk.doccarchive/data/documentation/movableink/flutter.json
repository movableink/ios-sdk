{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Getting started for apps that are built with Flutter."}]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The MovableInk SDK only supports the iOS Platform."}]}],"type":"aside","name":"Important"},{"anchor":"Integration","level":2,"type":"heading","text":"Integration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Open Xcode and open your projects xcworkspace. File > Open > project\/ios\/Runner.xcworkspace."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Download the MovableInk SDK and add it to your project by dragging the "},{"type":"codeVoice","code":"MovableInk.xcframework"},{"type":"text","text":" file into the Frameworks, Libraries, and Embedded Content section in the Project Settings:"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"project_settings_add_framework.gif"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In your "},{"type":"codeVoice","code":"Info.plist"},{"type":"text","text":", add the "},{"type":"codeVoice","code":"movable_ink_universal_link_domains"},{"type":"text","text":" key as an array containing all the domains that you’d like the MovableInk SDK to handle. Note: These should only be domains that are shown in your Creative Tags, such as "},{"type":"codeVoice","code":"mi.example.com"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"xml","code":["<key>movable_ink_universal_link_domains<\/key>","<array>","  <string>mi.example.com<\/string>","<\/array>"]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"info_plist_example.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also edit the "},{"type":"codeVoice","code":"Info.plist"},{"type":"text","text":" in the Project Settings."},{"type":"text","text":" "},{"type":"text","text":"Navigate to the Project Settings, then to the Info tab."},{"type":"text","text":" "},{"type":"text","text":"Here, you can add the "},{"type":"codeVoice","code":"movable_ink_universal_link_domains"},{"type":"text","text":" key as an array:"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"project_settings_update_info.gif"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Under the Signing & Capabilities tab, add the Associated Domains Capability, then add the applinks that you can support. These should include the same domains as the ones in the "},{"type":"codeVoice","code":"movable_ink_universal_link_domains"},{"type":"text","text":" in the step before."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"project_settings_update_capabilities.gif"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In your "},{"type":"codeVoice","code":"AppDelegate"},{"type":"text","text":", import MovableInk and call the "},{"type":"codeVoice","code":"start"},{"type":"text","text":" method when your app has finished launching as well as overriding the other methods shown below:"}]},{"type":"codeListing","syntax":"swift","code":["import UIKit","import Flutter","import MovableInk","","@UIApplicationMain","@objc class AppDelegate: FlutterAppDelegate {","  override func application(","    _ application: UIApplication, didFinishLaunchingWithOptions","    launchOptions: [UIApplication.LaunchOptionsKey: Any]?","  ) -> Bool {","","    GeneratedPluginRegistrant.register(with: self)","","    MIClient.start(launchOptions: launchOptions) { url in","      \/\/ This closure will be called when the MovableInk SDK is able to resolve a URL ","      \/\/ that opens the app into a clickthrough link","      \/\/","      \/\/ url is the clickthrough link for a given Creative Tag","    }","","    return super.application(application, didFinishLaunchingWithOptions: launchOptions)","  }","","  override func application(","    _ app: UIApplication,","    open url: URL,","    options: [UIApplication.OpenURLOptionsKey : Any] = [:]","  ) -> Bool {","    MIClient.handleUniversalLink(url: url)","","    return true","  }","","  override func application(","    _ application: UIApplication, ","    continue userActivity: NSUserActivity, ","    restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void","  ) -> Bool {","    \/\/ Handler for Universal Links","    MIClient.handleUniversalLink(from: userActivity)","","    return true","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To access the clickthrough url in your Flutter app, we’ll use a "},{"type":"codeVoice","code":"FlutterEventChannel"},{"type":"text","text":". Before we create the channel, we’ll need to create a handler to send events across the channel."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new file and paste in this code. This will allow us to send the clickthrough think to the Flutter app."}]},{"type":"codeListing","syntax":"swift","code":["final class MIStreamHandler: NSObject, FlutterStreamHandler {","  static var shared = MIStreamHandler()","  ","  var sink: FlutterEventSink?","  ","  func onListen(withArguments arguments: Any?, eventSink events: @escaping FlutterEventSink) -> FlutterError? {","    sink = events","    return nil","  }","  ","  @objc func sendClickthroughLink(_ url: String) {","    guard let sink = sink else { return }","    ","    sink(url)","  }","  ","  func onCancel(withArguments arguments: Any?) -> FlutterError? {","    sink = nil","    ","    return nil","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Back in the "},{"type":"codeVoice","code":"AppDelegate"},{"type":"text","text":", update the "},{"type":"codeVoice","code":"application(_:,didFinishLaunchingWithOptions:)"},{"type":"text","text":" method:"}]},{"type":"codeListing","syntax":"swift","code":["override func application(","  _ application: UIApplication,","  didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?",") -> Bool {","  GeneratedPluginRegistrant.register(with: self)","  ","  MIClient.start { url in","    \/\/ send the clickthrough link (url) through the stream handler","    MIStreamHandler.shared.sendClickthroughLink(url)","  }","  ","  let controller: FlutterViewController = window?.rootViewController as! FlutterViewController","  ","  \/\/ Create an event channel","  \/\/ take note of the name of this channel as we'll have to match it in the Flutter app","  let miChannel = FlutterEventChannel(","    name: \"com.movableink.sdk\/deeplink_channel\",","    binaryMessenger: controller.binaryMessenger","  )","  miChannel.setStreamHandler(MIStreamHandler.shared)","  ","  return super.application(application, didFinishLaunchingWithOptions: launchOptions)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Open your "},{"type":"codeVoice","code":"main.dart"},{"type":"text","text":" file and update your state to subscribe to the event we created before:"}]},{"type":"codeListing","syntax":"dart","code":["import 'dart:async';","import 'package:flutter\/material.dart';","import 'package:flutter\/services.dart';","","\/\/ Create a class that will create the stream","class MovableInkChannel {","  static const EventChannel _deeplinkChannel =","      EventChannel('com.movableink.sdk\/deeplink_channel');","","  static Stream<String> get getDeeeplinkStream {","    return _deeplinkChannel.receiveBroadcastStream().cast();","  }","}","","\/\/ Update your HomePageState to subscribe to the event","\/\/ You can use the _clickthroughLink to route to the screen that matches the given url","class _MyHomePageState extends State<MyHomePage> {","  String? _clickthroughLink;","","  StreamSubscription<String>? _miSubscription;","","  @override","  void initState() {","    super.initState();","    _startListeningMIDeeplink();","  }","","  \/\/\/ Handle incoming links - the ones that the app will receive from the OS","  \/\/\/ while already started.","  void _startListeningMIDeeplink() {","    \/\/ It will handle app links while the app is already started - be it in","    \/\/ the foreground or in the background.","    _miSubscription = MovableInkChannel.getDeeeplinkStream.listen((String url) {","      if (!mounted) {","        return;","      }","","      debugPrint('Received URI: $url');","","      setState(() {","        _clickthroughLink = url;","      });","    }, onError: (Object err) {","      if (!mounted) {","        return;","      }","","      debugPrint('Error occurred: $err');","    });","  }","","  @override","  void dispose() {","    _miSubscription?.cancel();","    super.dispose();","  }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/movableink\/flutter"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/Flutter","interfaceLanguage":"swift"},"kind":"article","metadata":{"roleHeading":"Article","title":"Flutter","role":"article","modules":[{"name":"MovableInk"}]},"hierarchy":{"paths":[["doc:\/\/com.movableink.sdk\/documentation\/MovableInk"]]},"seeAlsoSections":[{"title":"Getting Started","identifiers":["doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/Swift_UIKit_Scenes","doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/Swift_UIKit_No_Scenes","doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/SwiftUI","doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/ObjC","doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/ReactNative"],"generated":true}],"references":{"project_settings_add_framework.gif":{"alt":"Project Settings Add Framework","type":"image","identifier":"project_settings_add_framework.gif","variants":[{"url":"\/images\/project_settings_add_framework.gif","traits":["1x","light"]}]},"doc://com.movableink.sdk/documentation/MovableInk":{"role":"collection","title":"MovableInk","abstract":[{"type":"text","text":"The MovableInk SDK provides the tools to allow your app to be deeplinked into from a Creative Tag."}],"identifier":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk","kind":"symbol","type":"topic","url":"\/documentation\/movableink"},"project_settings_update_info.gif":{"alt":"Project Settings gif","type":"image","identifier":"project_settings_update_info.gif","variants":[{"url":"\/images\/project_settings_update_info.gif","traits":["1x","light"]}]},"info_plist_example.png":{"alt":"Info plist example","type":"image","identifier":"info_plist_example.png","variants":[{"url":"\/images\/info_plist_example.png","traits":["1x","light"]}]},"doc://com.movableink.sdk/documentation/MovableInk/Swift_UIKit_Scenes":{"role":"article","title":"Swift\/UIKit - Using Scenes","abstract":[],"identifier":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/Swift_UIKit_Scenes","kind":"article","type":"topic","url":"\/documentation\/movableink\/swift_uikit_scenes"},"doc://com.movableink.sdk/documentation/MovableInk/ReactNative":{"role":"article","title":"React Native","abstract":[],"identifier":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/ReactNative","kind":"article","type":"topic","url":"\/documentation\/movableink\/reactnative"},"project_settings_update_capabilities.gif":{"alt":"Project Settings Capabilities gif","type":"image","identifier":"project_settings_update_capabilities.gif","variants":[{"url":"\/images\/project_settings_update_capabilities.gif","traits":["1x","light"]}]},"doc://com.movableink.sdk/documentation/MovableInk/ObjC":{"role":"article","title":"Objective-C","abstract":[],"identifier":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/ObjC","kind":"article","type":"topic","url":"\/documentation\/movableink\/objc"},"doc://com.movableink.sdk/documentation/MovableInk/SwiftUI":{"role":"article","title":"SwiftUI App","abstract":[],"identifier":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/SwiftUI","kind":"article","type":"topic","url":"\/documentation\/movableink\/swiftui"},"doc://com.movableink.sdk/documentation/MovableInk/Swift_UIKit_No_Scenes":{"role":"article","title":"Swift\/UIKit - Without Scenes","abstract":[],"identifier":"doc:\/\/com.movableink.sdk\/documentation\/MovableInk\/Swift_UIKit_No_Scenes","kind":"article","type":"topic","url":"\/documentation\/movableink\/swift_uikit_no_scenes"}}}